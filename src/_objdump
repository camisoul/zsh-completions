#compdef objdump
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for objdump
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------


local ret=1
_arguments -s -S \
  '(-a --archive-headers)'{-a,--archive-headers}'[Display archive header information]' \
  '(-f --file-headers)'{-f,--file-headers}'[Display the contents of the overall file header]' \
  '(-p --private-headers)'{-p,--private-headers}'[Display object format specific file header contents]' \
  '(-P --private)'{-P,--private=}'[Display object format specific contents]:OPT,OPT...' \
  '(-h --headers)'{-h,--headers}'[Display the contents of the section headers]' \
  '(-x --all-headers)'{-x,--all-headers}'[Display the contents of all headers]' \
  '(-d --disassemble)'{-d,--disassemble}'[Display assembler contents of executable sections]' \
  '(-D --disassemble-all)'{-D,--disassemble-all}'[Display assembler contents of all sections]' \
  '(-S --source)'{-S,--source}'[Intermix source code with disassembly]' \
  '(-s --full-contents)'{-s,--full-contents}'[Display the full contents of all sections requested]' \
  '(-g --debugging)'{-g,--debugging}'[Display debug information in object file]' \
  '(-e --debugging-tags)'{-e,--debugging-tags}'[Display debug information using ctags style]' \
  '(-G --stabs)'{-G,--stabs}'[Display (in raw form) any STABS info in the file]' \
  '(--dwarf)-W+[Display DWARF info in the file]:DWARF:(l L i a p r m f F s o R t)' \
  '(-W)--dwarf=[Display DWARF info in the file]:DWARF:(rawline decodedline info abbrev pubnames aranges macro frames frames-interp str loc Ranges pubtypes gdb_index trace_info trace_abbrev trace_aranges addr cu_index)' \
  '(-t --syms)'{-t,--syms}'[Display the contents of the symbol table(s)]' \
  '(-T --dynamic-syms)'{-T,--dynamic-syms}'[Display the contents of the dynamic symbol table]' \
  '(-r --reloc)'{-r,--reloc}'[Display the relocation entries in the file]' \
  '(-R --dynamic-reloc)'{-R,--dynamic-reloc}'[Display the dynamic relocation entries in the file]' \
  "(-v --version)"{-v,--version}"[Display this program's version number]" \
  '(-i --info)'{-i,--info}'[List object formats and architectures supported]' \
  '(-H --help)'{-H,--help}'[Display information]' \
  '(-b --target)'{-b,--target=}'[Specify the target object format as BFDNAME]:BFDNAME' \
  '(-m --architecture)'{-m,--architecture=}'[Specify the target architecture as MACHINE]:MACHINE' \
  '(-j --section)'{-j,--section=}'[Only display information for section NAME]:NAME' \
  '(-M --disassembler-options)'{-M,--disassembler-options=}'[Pass text OPT on to the disassembler]:OPT:->disassembler' \
  '(-E)--endian=[Assume big endian format when disassembling]:ENDIAN:(big little)' \
  '(--endian)-E+[Assume little endian format when disassembling]:ENDIAN:(B L)' \
  '--file-start-context[Include context from start of file (with -S)]' \
  '(-I --include)'{-I,--include=}'[Add DIR to search list for source files]:DIR' \
  '(-l --line-numbers)'{-l,--line-numbers}'[Include line numbers and filenames in output]' \
  '(-F --file-offsets)'{-F,--file-offsets}'[Include file offsets when displaying information]' \
  '(-C --demangle)'{-C-,--demangle=-}'[Decode mangled/processed symbol names]:STYLE:(auto gnu lucid arm hp edg gnu-v3 java gnat)' \
  '(-w --wide)'{-w,--wide}'[Format output for more than 80 columns]' \
  '(-z --disassemble-zeroes)'{-z,--disassemble-zeroes}'[Do not skip blocks of zeroes when disassembling]' \
  '--start-address=[Only process data whose address is >= ADDR]:ADDR' \
  '--stop-address=[Only process data whose address is <= ADDR]:ADDR' \
  '--prefix-addresses[Print complete address alongside disassembly]' \
  '--show-raw-insn[Display hex alongside symbolic disassembly]' \
  '--no-show-raw-insn[Display hex alongside symbolic disassembly]' \
  '--insn-width=[Display WIDTH bytes on a single line for -d]:WIDTH' \
  '--adjust-vma=[Add OFFSET to all displayed section addresses]:OFFSET' \
  '--special-syms[Include special symbols in symbol dumps]' \
  '--prefix=[Add PREFIX to absolute paths for -S]:PREFIX' \
  '--prefix-strip=[Strip initial directory names for -S]:LEVEL' \
  '--dwarf-depth=[Do not display DIEs at depth N or greater]:N' \
  '--dwarf-start=[Display DIEs starting with N, at the same depth]:N' \
  '--dwarf-check[Make additional dwarf internal consistency checks]' \
  '*:file:_files' && ret=0

case "${state}" in
  "disassembler")
    _values 'disassembler' \
      'x86-64[Disassemble in 64bit mode]' \
      'i386[Disassemble in 32bit mode]' \
      'i8086[Disassemble in 16bit mode]' \
      'att[Display instruction in AT&T syntax]' \
      'intel[Display instruction in Intel syntax]' \
      'att-mnemonic[Display instruction in AT&T mnemonic]' \
      'intel-mnemonic[Display instruction in Intel mnemonic]' \
      'addr64[Assume 64bit address size]' \
      'addr32[Assume 32bit address size]' \
      'addr16[Assume 16bit address size]' \
      'data32[Assume 32bit data size]' \
      'data16[Assume 16bit data size]' \
      'suffix[Always display instruction suffix in AT&T syntax]' && ret=0
    ;;
esac

return ret
