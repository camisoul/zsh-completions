#compdef atool apack aunpack als acat adiff arepack 
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for atool apack aunpack als acat adiff arepack 
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local cmds='-a --add -c --cat -d --diff -x --extract -l --list -X --extract-to -r --repack'
local -a archive_exts archive_types
archive_exts=(
  {,tar,t}{gz,bz,bz2,Z,lz,xz,7z}
  t{ar{,zlo},zo}
  zip jar war rar lha lzh alz ace arj arc
  rpm deb cab cpio lzma rz lrz a
  ZIP JAR RAR ACE ARJ ARC
  )

if [[ ${service} == atool && ${CURRENT} -eq 2 ]]; then
  _arguments -s -S \
    '(- 1 *)--version[Output version information and exit.]' \
    '(- 1 *)--help[Show summary of options.]' \
    "(${cmds})"{-l,--list}'[List files in archive.]' \
    "(${cmds})"{-x,--extract}'[Extract files from archive.]' \
    "(${cmds})"{-X,--extract-to=}'[Extract files from archive to specified directory.]:directory:_directories' \
    "(${cmds})"{-a,--add}'[Create archive.]' \
    "(${cmds})"{-c,--cat}'[Extract a file from archive to standard out.]' \
    "(${cmds})"{-d,--diff}'[Extract two archives and use diff to generate differencies between them.]' \
    "(${cmds})"{-r,--repack}'[Repacks archives to a differnt format.]' && ret=0
else
  _arguments -s -S \
    '(-e --each)'{-e,--each}'[For each argument, execute the specified command.]:files:_files -g "*.('${(j:|:)archive_exts}')"' \
    '(-F --format)'{-F+,--format=}'[Specify arhive format manually.]:archive types:->types' \
    '(-S --simulate)'{-s,--simulate}'[Run atool in simulation mode.]' \
    '(-E --explain)'{-E,--explain}'[Display commands executed by atool.]' \
    '(-p --page)'{-p,--page}'[Run output through a pager.]' \
    '(-f --force)'{-f,--force}'[Allow overwriting of local files.]' \
    '(-D --subdir)'{-D,--subdir}'[Always create a new directory for the archive.]' \
    '(-0 --null)'{-0,--null}'[If no file arguments are specified, the list of files will be read from standard in.]' \
    '*'{-q,--quiet}'[Decrease verbosity level by one.]' \
    '*'{-v,--verbose}'[Increase verbosity level by one.]' \
    '(-q --quiet -v --verbose)'{-V+,--verbosity=}'[Specify verbosity level.]:LEVEL' \
    '(--config)--config=[Load configuration from the specified file.]:FILE:_files' \
    '(-o --option)*'{-o,--option=}'[Override a configuration option.]:KEY=VALUE:->option' \
    '(-O --format-option)*'{-O,--format-option=}'[Send additional options to the archiver command.]:OPTION' \
    '(--save-outdir)--save-outdir=:DIR:_directories' \
    '1:ARCHIVE:_files -g "*.('${(j:|:)archive_exts}')"' \
    '*:FILE:_files' && ret=0
fi

local -a archive_add archive_cat archive_extract archive_list
archive_add=(
  {,tar+}{{g,l,b}zip,bzip2,compress,lzop,7z,xz}
  zip jar rar lha a arj arc lzma rzip lrzip cpio
  )
archive_cat=(
  {,tar+}{{g,l,b}zip,bzip2,compress,xz}
  tar+{7z,lzop} cab zip rar lha a arc lzma
  )
archive_extract=(
  {,tar+}{{g,l,b}zip,bzip2,compress,lzop,7z,xz}
  {,al,r,lr}zip tar jar rar a lha ace arj arc rpm deb cab lzma cpio
  )
archive_list=(
  tar+{{g,l,b}zip,bzip2,compress,lzop,7z,xz}
  zip tar jar rar a lha ace arj arc rpm deb cab cpio
  )
archive_repack=(
  {,tar+}{{g,l,b}zip,bzip2,compress}
  tar+{7z,lzop} zip rar lha a arc lzma
  )

case ${state} in
  types)
    if [[ ${words[1]} == arepack || ${words[2]} =~ "--arepack|-r" ]]; then
      _describe -t 'types' 'type' archive_repack && ret=0
    elif [[ ${words[1]} == apack || ${words[2]} =~ "--add|-a" ]]; then
      _describe -t 'types' 'type' archive_add && ret=0
    elif [[ ${words[1]} == acat || ${words[2]} =~ "--cat|-c" ]]; then
      _describe -t 'types' 'type' archive_cat && ret=0
    elif [[ ${words[1]} == als || ${words[2]} =~ "--list|-l" ]]; then
      _describe -t 'types' 'type' archive_list && ret=0
    elif [[ ${words[1]} == aunpack || ${words[2]} =~ "--extract|-x" || ${words[2]} =~ "--extract-to|-X"  ]]; then
      _describe -t 'types' 'type' archive_extract && ret=0
    elif [[ ${words[1]} == adiff || ${words[2]} =~ "--diff|-d" ]]; then
      _describe -t 'types' 'type' archive_extract && ret=0
    fi
    ;;
  option)
    compset -P '*='
    compset -S '=*'
    _message -e value 'KEY=VALUE' && ret=0
    ;;
esac

return ret
