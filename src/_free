#compdef free
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for free
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local units='-b --bytes -k --kilo -m --mega -g --giga --tera -h --human'

_arguments -s \
  '(- : *)--help[display help and exit]' \
  '(- : *)'{-V,--version}'[output version information and exit]' \
  "($units)"{-b,--bytes}'[display the amount of memory in bytes]' \
  "($units)"{-k,--kilo}'[display the amount of memory in kilobytes]' \
  "($units)"{-m,--mega}'[display the amount of memory in megabytes]' \
  "($units)"{-g,--giga}'[display the amount of memory in gigabytes]' \
  "($units)--tera[display the amount of memory in terabytes]" \
  "($units)"{-h,--human}'[automatically scaled]' \
  '--si[use power of 1000 not 1024]' \
  '(-l --lohi)'{-l,--lohi}'[show detailed low and high memory statistics]' \
  '(-t --total)'{-t,--total}'[display a line showing the column totals]' \
  '(-s --seconds)'{-s+,--seconds}'[continuously display the result]:seconds' \
  '(-c --count)'{-c+,--count}'[display the result count times]:count' && ret=0

return ret
