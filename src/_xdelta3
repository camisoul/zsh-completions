#compdef xdelta3
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for xdelta3
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local -a args encode_args

args=(
  '(-0 -1 -2 -3 -4 -5 -6 -7 -8 -9)'{-0,-1,-2,-3,-4,-5,-6,-7,-8,-9}'[compression level]'
  '-c[use stdout]'
  '-f[force overwrite]'
  '-F[force the external-compression subprocess]'
  '*-q[be quiet]'
  '*-v[be verbose (max 2)]'
  '-B[bytes source window size]:size'
  '-W[bytes input window size]:size'
  '-P[size compression duplicates window]:size'
  '-I[size instruction buffer size (0 = unlimited)]:size'
  '-s[source file to copy from (if any)]'
  '-S[enable/disable secondary compression]:compression:(djw fgk lzma none)'
  '-N[disable small string-matching compression]'
  '-J[disable output (check/compute only)]'
  '*: :_files'
)
encode_args=(
  '-D[disable external decompression]'
  '-C[soft config]'
  '-A[disable/provide application header]'
)

if (( CURRENT == 2 )); then
  _arguments \
    '1: :->modes' \
    "${args[@]}" \
    "${encode_args[@]}" \
    '(- : *)'-V'[show version]' \
    '(- : *)'-h'[show help]' && ret=0
else
  local -a encode_ary
  case "${words[2]}" in
    test)
      _arguments -S \
        "${args[@]}" \
        '-T[use alternate code table]' && ret=0
      ;;
    config|recode|print*)
      _arguments -S "${args[@]}" && ret=0
      ;;
    decode|-d)
      _arguments -S \
        "${args[@]}" \
        '-D[disable external decompression]' \
        '-R[disable external recompression]' \
        '-n[disable checksum]' && ret=0
      ;;
    merge)
      _arguments -S \
        "${args[@]}" \
        '*-m[arguments for merge]' && ret=0
      ;;
    *)
      _arguments -S \
        "${args[@]}" \
        "${encode_args[@]}" && ret=0
      ;;
  esac
fi

case "${state}" in
  modes)
    _values 'mode' \
      'config[prints xdelta3 configuration]' \
      {-d,decode}'[decompress the input]' \
      {-e,encode}'[compress the input (default)]' \
      'test[run the builtin tests]' \
      'printdelta[print information about the entire delta]' \
      'printhdr[print information about the first window]' \
      'printhdrs[print information about all windows]' \
      'recode[encode with new application/secondary settings]' \
      'merge[merge VCDIFF inputs]' && ret=0
      ;;
esac

return ret
