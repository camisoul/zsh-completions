#compdef ash dash
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for ash/dash
#
# --------------------------------------------------------------------------
# Copyright (c) 2015-2016 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local -A setopts=(
  a allexport
  C noclobber
  e errexit
  f noglob
  n noexec
  u nounset
  v verbose
  x xtrace
  I ignoreeof
  i interactive
  m monitor
  b notify
  E emacs
  V vi
  )

local -a args
args=(
  '-l[login shell]'
  '-s[stdin]'
  '(1 -)-c[run a command]:command:_cmdstring'
  '(-)1:script file:_files'
  '*::arguments:->args'
)

local opts value
local -A opt_args
for opts value in ${(kv)setopts}; do
  args+=("-${opts}[equivalent to -o ${value}]")
  args+=("+${opts}[equivalent to +o ${value}]")
done
args+=("*-o:set option-name:(${setopts})")
args+=("*+o:unset option-name:(${setopts})")

_arguments -S -s : ${args} && ret=0

case $state in
  args)
    if [[ -n ${opt_args[(I)-c|-s]} ]]; then
      _files
    else
      _normal
    fi
    ;;
esac

return ret
