#compdef sh dash
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for dash
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local -A setopts
setopts=(
  a allexport
  C clobber
  e errexit
  f noglob
  n noexec
  u nounset
  v verbose
  x xtrace
  I ignoreeof
  i interactive
  m monitor
  b notify
  E vi
  V emacs
  )

local -a args
args=(
  '-l[Make dash act as if it had been invoked as a login shell]'
)

for opts in ${(k)setopts[@]}
do
  args+=("-${opts}[equivalent to -o ${setopts[${opts}]}]")
  args+=("+${opts}[equivalent to +o ${setopts[${opts}]}]")
done
args+=("*-o:set option-name:(${setopts})")
args+=("*+o:unset option-name:(${setopts})")

case ${words[2]} in
  -c)
    args+=('*:command string:_command_names -e')
    ;;
  *)
    args+=('*:file:_files')
    ;;
esac

if [[ ${CURRENT} -eq 2 ]]; then
  _arguments -s -S \
    '-c[read commands from the commad_string]' \
    '-s[stdin]' \
    ${args[@]} && ret=0
else
  _arguments -s -S ${args[@]} && ret=0
fi

return ret
