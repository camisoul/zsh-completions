#compdef split
#
# --------------------------------------------------------------------------
#
# Description :
#   @(#) zsh completion script for split
#
# --------------------------------------------------------------------------
# Copyright (c) 2015 camisoul<camisoulmax@gmail.com>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
# --------------------------------------------------------------------------

local ret=1
local -a _split_cmds

_split_cmds=(-b --bytes -C --line-bytes -l --lines -n --number)
_arguments -s -S \
  '(- : *)--help[display help and exit]' \
  '(- : *)--version[output version information and exit]' \
  "(${_split_cmds})"{-b+,--bytes=}'[put SIZE bytes per output file]:SIZE' \
  "(${_split_cmds})"{-C+,--line-bytes=}'[put at most SIZE bytes of lines per output file]:SIZE' \
  "(${_split_cmds})"{-l+,--lines=}'[put NUMBER lines per output file]:NUMBER' \
  "(${_split_cmds})"{-n+,--number=}'[generate CHUNKS output files]:CHUNKS' \
  '(-a --suffix-length)'{-a+,--suffix-length=}'[generate suffixes of length N]:N' \
  '--additional-suffix=[append an additional SUFFIX to file names]:SUFFIX' \
  '(-d --numeric-suffixes)'{-d,--numeric-suffixes=-}'[use numeric suffixes instead of alphabetic]:FROM' \
  '(-e --elide-empty-files)'{-e,--elide-empty-files}"[do not generate empty output files with '-n']" \
  '--filter=[write to shell COMMAND]:COMMAND' \
  '(-u --unbufferd)'{-u,--unbufferd}"[immediately copy input to output]" \
  '--verbose[print a diagnostic just before each output file is opend]' \
  '*: :_files' && ret=0

return ret
